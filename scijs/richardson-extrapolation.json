{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/scijs/richardson-extrapolation\">richardson-extrapolation   </a><div class=\"contrib\"></div></h1>\n<blockquote>\n<p>Use Richardson Extrapolation sequence acceleration to compute the order of convergence and exact value of a sequence</p>\n</blockquote>\n<h2 id=\"introduction\">Introduction</h2>\n<p><a href=\"https://en.wikipedia.org/wiki/Richardson_extrapolation\">Richardson Extrapolation</a> is a numerical method that uses solutions at multiple values of a small parameter <img alt=\"h\" valign=\"middle\" src=\"https://raw.githubusercontent.com/scijs/richardson-extrapolation/master/docs/images/h-2b9e85d03c.png\" width=\"15.5\" height=\"18\"> (think: <img alt=\"h\" valign=\"middle\" src=\"https://raw.githubusercontent.com/scijs/richardson-extrapolation/master/docs/images/h-2b9e85d03c.png\" width=\"15.5\" height=\"18\"> = grid size) to accelerate the converenge of a sequence. To make that concrete, consider an method <img alt=\"f(h)\" valign=\"middle\" src=\"https://raw.githubusercontent.com/scijs/richardson-extrapolation/master/docs/images/fh-40c071b989.png\" width=\"43\" height=\"23\"> that approximates the value of <img alt=\"f\" valign=\"middle\" src=\"https://raw.githubusercontent.com/scijs/richardson-extrapolation/master/docs/images/f-d5a8c687ff.png\" width=\"16\" height=\"22\">. Writing this as </p><p align=\"center\"><img alt=\"f(h) = f + c h^n + o(h^{n+1}),\" valign=\"middle\" src=\"https://raw.githubusercontent.com/scijs/richardson-extrapolation/master/docs/images/fh-f-c-hn-ohn1-935ed4e5b7.png\" width=\"234.5\" height=\"33\"></p> the unknowns are the exact value <img alt=\"f\" valign=\"middle\" src=\"https://raw.githubusercontent.com/scijs/richardson-extrapolation/master/docs/images/f-d5a8c687ff.png\" width=\"16\" height=\"22\">, the error constant <img alt=\"c\" valign=\"middle\" src=\"https://raw.githubusercontent.com/scijs/richardson-extrapolation/master/docs/images/c-414b23564a.png\" width=\"13\" height=\"18\">, and the order of convergence <img alt=\"n\" valign=\"middle\" src=\"https://raw.githubusercontent.com/scijs/richardson-extrapolation/master/docs/images/n-faeb6a01dd.png\" width=\"16\" height=\"18\">.<p></p>\n<p>In its current form, this module solves for two of three unknowns using the solution at two parameter sizes <img alt=\"h\" valign=\"middle\" src=\"https://raw.githubusercontent.com/scijs/richardson-extrapolation/master/docs/images/h-2b9e85d03c.png\" width=\"15.5\" height=\"18\">. So for example, given the the order of convergence <img alt=\"n\" valign=\"middle\" src=\"https://raw.githubusercontent.com/scijs/richardson-extrapolation/master/docs/images/n-faeb6a01dd.png\" width=\"16\" height=\"18\">, you may approximate the exact value <img alt=\"f\" valign=\"middle\" src=\"https://raw.githubusercontent.com/scijs/richardson-extrapolation/master/docs/images/f-d5a8c687ff.png\" width=\"16\" height=\"22\"> (with error of order <img alt=\"o(h^{n+1})\" valign=\"middle\" src=\"https://raw.githubusercontent.com/scijs/richardson-extrapolation/master/docs/images/ohn1-b67532f9e1.png\" width=\"72\" height=\"23\">), or given the exact value <img alt=\"f\" valign=\"middle\" src=\"https://raw.githubusercontent.com/scijs/richardson-extrapolation/master/docs/images/f-d5a8c687ff.png\" width=\"16\" height=\"22\">, you may solve for the order of convergence <img alt=\"n\" valign=\"middle\" src=\"https://raw.githubusercontent.com/scijs/richardson-extrapolation/master/docs/images/n-faeb6a01dd.png\" width=\"16\" height=\"18\">.</p>\n<p>The solution of all three unknowns requires the solution of a set of three nonlinear equations and is not implemented yet. :(</p>\n<h2 id=\"install\">Install</h2>\n<pre><code class=\"lang-bash\"><div class=\"line\"><span class=\"source shell\"><span>$&#xA0;npm&#xA0;install&#xA0;richardson-extrapolation</span></span></div>\n</code></pre>\n<h2 id=\"example\">Example</h2>\n<p>For actual sample usage, see the <a href=\"https://github.com/scijs/ode-rk4/blob/master/test/test.js\">scijs/ode-rk4</a> tests that use this module along with a known solution to verify the order of convergence.</p>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;richardson&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&apos;</span></span><span>richardson-extrapolation</span><span class=\"punctuation definition string end js\"><span>&apos;</span></span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>&#xA0;Exact&#xA0;value&#xA0;=&#xA0;3.5</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>&#xA0;Order&#xA0;of&#xA0;convergence&#xA0;=&#xA0;3</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function js\"><span class=\"storage type function js\"><span>function</span></span><span>&#xA0;</span><span class=\"entity name function js\"><span>func</span></span><span class=\"punctuation definition parameters begin js\"><span>(</span></span><span>&#xA0;</span><span class=\"variable parameter function js\"><span>h</span></span><span>&#xA0;</span><span class=\"punctuation definition parameters end js\"><span>)</span></span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"keyword control js\"><span>return</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>3.5</span></span><span>&#xA0;</span><span class=\"keyword operator js\"><span>+</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>2.0</span></span><span>&#xA0;</span><span class=\"keyword operator js\"><span>*</span></span><span>&#xA0;</span><span class=\"variable other object js\"><span>Math</span></span><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"support function js\"><span>pow</span></span><span class=\"meta brace round js\"><span>(</span></span><span>&#xA0;h</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>3</span></span><span>&#xA0;</span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta brace curly js\"><span>}</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>&#xA0;Solve&#xA0;for&#xA0;the&#xA0;order&#xA0;of&#xA0;convergence:</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>richardson</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span>&#xA0;func</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span><span>&#xA0;f</span><span class=\"keyword operator js\"><span>:</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>3.5</span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>}</span></span><span>&#xA0;</span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>&#xA0;=&gt;&#xA0;{&#xA0;f:&#xA0;3.5,&#xA0;&#xA0;n:&#xA0;3,&#xA0;&#xA0;c:&#xA0;2&#xA0;}</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>&#xA0;Approximate&#xA0;the&#xA0;the&#xA0;exact&#xA0;value&#xA0;given&#xA0;order&#xA0;of&#xA0;convergence:</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>richardson</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span>&#xA0;func</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span><span>&#xA0;n</span><span class=\"keyword operator js\"><span>:</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>3</span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>}</span></span><span>&#xA0;</span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>&#xA0;=&gt;&#xA0;{&#xA0;f:&#xA0;3.5,&#xA0;&#xA0;n:&#xA0;3,&#xA0;&#xA0;c:&#xA0;2&#xA0;}</span><span>&#xA0;</span></span></span></div>\n</code></pre>\n<h2 id=\"api\">API</h2>\n<h4 id=\"-require-richardson-extrapolation-func-h-knowns-\"><code>require(&apos;richardson-extrapolation&apos;)( func, h, knowns )</code></h4>\n<p><strong>Arguments:</strong></p>\n<ul>\n<li><code>func</code>: a function that takes small parameter <img alt=\"h\" valign=\"middle\" src=\"https://raw.githubusercontent.com/scijs/richardson-extrapolation/master/docs/images/h-2b9e85d03c.png\" width=\"15.5\" height=\"18\"> as its only argument</li>\n<li><code>h</code>: either a starting parameter size or a set of parameter sizes<ul>\n<li>if a number, then <img alt=\"h\" valign=\"middle\" src=\"https://raw.githubusercontent.com/scijs/richardson-extrapolation/master/docs/images/h-2b9e85d03c.png\" width=\"15.5\" height=\"18\"> is subdivided by a factor of 2 as needed t solve for the unknowns</li>\n<li>if an array of numbers, then the first <img alt=\"n\" valign=\"middle\" src=\"https://raw.githubusercontent.com/scijs/richardson-extrapolation/master/docs/images/n-faeb6a01dd.png\" width=\"16\" height=\"18\"> are used as values of <img alt=\"h\" valign=\"middle\" src=\"https://raw.githubusercontent.com/scijs/richardson-extrapolation/master/docs/images/h-2b9e85d03c.png\" width=\"15.5\" height=\"18\"> in order solve for <img alt=\"n\" valign=\"middle\" src=\"https://raw.githubusercontent.com/scijs/richardson-extrapolation/master/docs/images/n-faeb6a01dd.png\" width=\"16\" height=\"18\"> unknowns</li>\n</ul>\n</li>\n<li><code>knowns</code>: a hash of known parameters. Possibilities are:<ul>\n<li><img alt=\"n\" valign=\"middle\" src=\"https://raw.githubusercontent.com/scijs/richardson-extrapolation/master/docs/images/n-faeb6a01dd.png\" width=\"16\" height=\"18\"> provided (solves for <img alt=\"f\" valign=\"middle\" src=\"https://raw.githubusercontent.com/scijs/richardson-extrapolation/master/docs/images/f-d5a8c687ff.png\" width=\"16\" height=\"22\"> and <img alt=\"c\" valign=\"middle\" src=\"https://raw.githubusercontent.com/scijs/richardson-extrapolation/master/docs/images/c-414b23564a.png\" width=\"13\" height=\"18\">)</li>\n<li><img alt=\"f\" valign=\"middle\" src=\"https://raw.githubusercontent.com/scijs/richardson-extrapolation/master/docs/images/f-d5a8c687ff.png\" width=\"16\" height=\"22\"> provided (solves for <img alt=\"n\" valign=\"middle\" src=\"https://raw.githubusercontent.com/scijs/richardson-extrapolation/master/docs/images/n-faeb6a01dd.png\" width=\"16\" height=\"18\"> and <img alt=\"c\" valign=\"middle\" src=\"https://raw.githubusercontent.com/scijs/richardson-extrapolation/master/docs/images/c-414b23564a.png\" width=\"13\" height=\"18\">)</li>\n</ul>\n</li>\n</ul>\n<p><strong>Returns</strong>: A hash containing three values: the approximated exact value <img alt=\"f\" valign=\"middle\" src=\"https://raw.githubusercontent.com/scijs/richardson-extrapolation/master/docs/images/f-d5a8c687ff.png\" width=\"16\" height=\"22\">, order of convergence <img alt=\"n\" valign=\"middle\" src=\"https://raw.githubusercontent.com/scijs/richardson-extrapolation/master/docs/images/n-faeb6a01dd.png\" width=\"16\" height=\"18\">, and the constant of the error term <img alt=\"c\" valign=\"middle\" src=\"https://raw.githubusercontent.com/scijs/richardson-extrapolation/master/docs/images/c-414b23564a.png\" width=\"13\" height=\"18\">.</p>\n<h2 id=\"todo\">TODO</h2>\n<p>Implement nonlinear simultaneous equation solver as a separate module in order to solve for all three unknowns.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>(c) 2015 Ricky Reusser. MIT License</p>\n"}