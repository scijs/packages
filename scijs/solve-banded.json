{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/scijs/solve-banded\">solve-banded   </a><div class=\"contrib\"></div></h1>\n<blockquote>\n<p>Solve a system of banded linear equations</p>\n</blockquote>\n<h2 id=\"introduction\">Introduction</h2>\n<p>This module accepts javascript Arrays or typed arrays representing the bands of a banded matrix and computes the solution using the Thomas Algorithm. A system with one subdiagonal and two superdiagonal bands, for example, looks like:</p>\n<p align=\"center\"><img alt=\"\\left[\n\\begin{matrix}\n   {b_0}   &amp;   {c_0}   &amp;   {d_0}   &amp;   {   }   &amp;   {  }        &amp;   { }         &amp;   { 0 } \\\\\n   {a_1}   &amp;   {b_1}   &amp;   {c_1}   &amp;   {d_1}   &amp;   {  }        &amp;   { }         &amp;   {   } \\\\\n   {   }   &amp;   {a_2}   &amp;   {b_2}   &amp;   \\cdot   &amp;   \\cdot       &amp;   { }         &amp;   {   } \\\\\n   {   }   &amp;   {   }   &amp;   \\cdot   &amp;   \\cdot   &amp;   \\cdot       &amp;   {d_{n-4}}   &amp;   {   } \\\\\n   {   }   &amp;   {   }   &amp;   {   }   &amp;   \\cdot   &amp;   {b_{n-3}}   &amp;   {c_{n-3}}   &amp;   {d_{n-3}} \\\\\n   {   }   &amp;   {   }   &amp;   {   }   &amp;   { }     &amp;   {a_{n-2}}   &amp;   {b_{n-2}}   &amp;   {c_{n-2}}\\\\\n   { 0 }   &amp;   {   }   &amp;   {   }   &amp;   { }     &amp;   {   }       &amp;   {a_{n-1}}   &amp;   {b_{n-1}}\\\\\n\\end{matrix}\n\\right]\n\\left[\n\\begin{matrix}\n   {x_0 }  \\\\\n   {x_1 }  \\\\\n   \\cdot   \\\\\n   \\cdot   \\\\\n   \\cdot   \\\\\n   {x_{n-2} } \\\\\n   {x_{n-1} }  \\\\\n\\end{matrix}\n\\right]\n=\n\\left[\n\\begin{matrix}\n   {e_0 }  \\\\\n   {e_1 }  \\\\\n   \\cdot   \\\\\n   \\cdot   \\\\\n   \\cdot   \\\\\n   {e_{n-2} }  \\\\\n   {e_{n-1} }  \\\\\n\\end{matrix}\n\\right].\" valign=\"middle\" src=\"https://raw.githubusercontent.com/scijs/solve-banded/master/images/left-beginmatrix-b_0-c_0-d_0-0-a_1-b_1-c_1-d_-28211f3a7e.png\" width=\"528\" height=\"173.5\"></p>\n\n<p>The solver will fail if the matrix is singular and may not succeed if the matrix is not diagonally dominant. If the solver fails, it will log a console message and return false.  Note that the solver accepts a stride and offset for the input/output vector (<code>x</code>, below), so that a system can be solved in-place in an ndarray. The coefficient matrix does not currently accept strides or offsets and must be passed as individual vectors.</p>\n<h2 id=\"example\">Example</h2>\n<p>Consider the solution of the tridiagonal system</p>\n<p align=\"center\"><img alt=\"\\left[\n\\begin{matrix}\n   2 &amp; 1 &amp;  0 \\\\\n  -1 &amp; 7 &amp;  4 \\\\\n   0 &amp; 2 &amp; -3 \\\\\n\\end{matrix}\n\\right]\n\\left[\n\\begin{matrix}\n   {x_0 }  \\\\\n   {x_1 }  \\\\\n   {x_2 }  \\\\\n\\end{matrix}\n\\right]\n=\n\\left[\n\\begin{matrix}\n   {4}  \\\\\n   {25}  \\\\\n   {-5}  \\\\\n\\end{matrix}\n\\right].\" valign=\"middle\" src=\"https://raw.githubusercontent.com/scijs/solve-banded/master/images/left-beginmatrix-2-1-0-1-7-4-0-2-3-endmatrix--f1451b965d.png\" width=\"269\" height=\"78\"></p>\n\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;solveBanded&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&apos;</span></span><span>solve-banded</span><span class=\"punctuation definition string end js\"><span>&apos;</span></span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;e&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>4</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>25</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"keyword operator js\"><span>-</span></span><span class=\"constant numeric js\"><span>5</span></span><span class=\"meta brace square js\"><span>]</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>solveBanded</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"meta brace square js\"><span>[</span><span>[</span></span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"keyword operator js\"><span>-</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>2</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>2</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>7</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"keyword operator js\"><span>-</span></span><span class=\"constant numeric js\"><span>3</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>4</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta brace square js\"><span>]</span><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;e</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>3</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"entity name type object js console\"><span>console</span></span><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"support function js console\"><span>log</span></span><span class=\"meta brace round js\"><span>(</span></span><span>e</span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>&#xA0;=&gt;&#xA0;e&#xA0;=&#xA0;[&#xA0;1,&#xA0;2,&#xA0;3&#xA0;]</span><span>&#xA0;</span></span></span></div>\n</code></pre>\n<h2 id=\"installation\">Installation</h2>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span>$&#xA0;npm&#xA0;install&#xA0;solve</span><span class=\"keyword operator js\"><span>-</span></span><span>banded</span></span></div>\n</code></pre>\n<h2 id=\"api\">API</h2>\n<h4 id=\"-require-solve-banded-d-nsub-nsup-x-nx-ox-1-sx-1-\"><code>require(&apos;solve-banded&apos;)(d, nsub, nsup, x, nx[, ox = 1[, sx = 1]])</code></h4>\n<p><strong>Arguments</strong>:</p>\n<ul>\n<li><code>d</code>: an array of diagonal bands, starting with with the subdiagonal-most band (a in the example matrix above) and proceeding to the superdiagonal-most band (d in the example matrix above). Each vector must be a javascript <code>Array</code> or typed array of length <code>nx</code>.</li>\n<li><code>nsub</code>: an integer representing the number of subdiagonal bands, excluding the diagonal.</li>\n<li><code>nsup</code>: an integer representing the number of superdiagonal bands, excluding the diagonal.</li>\n<li><code>x</code>: a javascript <code>Array</code> or typed array of length <code>nx</code> representing the known vector (e in the example matrix above). On successful completion, this vector will contain the solution.</li>\n<li><code>nx</code>: an integer representing the number of equations, i.e. the length of <code>x</code>.</li>\n<li><code>ox</code> (optional): an integer representing the offset of data in <code>x</code>. If not provided, assumed equal to zero.</li>\n<li><code>sx</code> (optional): an integer representing the stride of data in <code>x</code>. If not provided, assumed equal to one.</li>\n</ul>\n<p><strong>Returns</strong>: True on successful completion, false otherwise.</p>\n<h2 id=\"license\">License</h2>\n<p>&#xA9; 2016 Ricky Reusser. MIT License.</p>\n"}