{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/scijs/ndarray-linspace\">ndarray-linspace   </a><div class=\"contrib\"></div></h1>\n<blockquote>\n<p>Fill an ndarray with equally spaced values</p>\n</blockquote>\n<h2 id=\"example\">Example</h2>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;linspace&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&apos;</span></span><span>ndarray-linspace</span><span class=\"punctuation definition string end js\"><span>&apos;</span></span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>linspace</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"constant numeric js\"><span>2</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>3</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>5</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>&#xA0;=&gt;&#xA0;ndarray([2,&#xA0;2.25,&#xA0;2.5,&#xA0;2.75,&#xA0;3])</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>linspace</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"constant numeric js\"><span>2</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>3</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>4</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span><span>endpoint</span><span class=\"keyword operator js\"><span>:</span></span><span>&#xA0;</span><span class=\"constant language boolean false js\"><span>false</span></span><span class=\"meta brace curly js\"><span>}</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>&#xA0;=&gt;&#xA0;ndarray([2,&#xA0;2.25,&#xA0;2.5,&#xA0;2.75])</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>linspace</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"constant numeric js\"><span>2</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>4</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>10</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span><span>dtype</span><span class=\"keyword operator js\"><span>:</span></span><span>&#xA0;</span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&apos;</span></span><span>int8</span><span class=\"punctuation definition string end js\"><span>&apos;</span></span></span><span class=\"meta brace curly js\"><span>}</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>&#xA0;=&gt;&#xA0;ndarray([2,&#xA0;2,&#xA0;2,&#xA0;2,&#xA0;2,&#xA0;3,&#xA0;3,&#xA0;3,&#xA0;3,&#xA0;4])</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;y&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"variable other object js\"><span>pool</span></span><span class=\"meta method-call js\"><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"entity name function js\"><span>zeros</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>5</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>linspace</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span>y</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>3</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>5</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>&#xA0;y&#xA0;=&gt;&#xA0;ndarray([1,&#xA0;1.5,&#xA0;2,&#xA0;2.5,&#xA0;3])</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;y&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"variable other object js\"><span>pool</span></span><span class=\"meta method-call js\"><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"entity name function js\"><span>zeros</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>2</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>2</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>linspace</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span>y</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>2</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>&#xA0;y&#xA0;=&gt;&#xA0;[&#xA0;0,&#xA0;0&#xA0;]</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;[&#xA0;1,&#xA0;1&#xA0;]</span><span>&#xA0;</span></span></span></div>\n</code></pre>\n<h2 id=\"installation\">Installation</h2>\n<pre><code class=\"lang-bash\"><div class=\"line\"><span class=\"source shell\"><span>npm&#xA0;install&#xA0;ndarray-linspace</span></span></div>\n</code></pre>\n<h2 id=\"api\">API</h2>\n<h4 id=\"-require-ndarray-linspace-output-start-end-steps-options-\"><code>require(&apos;ndarray-linspace&apos;)([output,] start, end, steps[, options])</code></h4>\n<p>An array of equally spaced values.</p>\n<p><strong>Arguments</strong>:</p>\n<ul>\n<li><code>output</code> (options): if provided, the destination array to be filled with values. If the number of dimensions is greater than one, then the length of the first dimension must match the number of values and the entire ndarray will be filled with the linspace corresponding to the index of the first dimension.</li>\n<li><code>start</code>: starting value of the interval</li>\n<li><code>end</code>: ending value of the interval</li>\n<li><code>steps</code>: number of divisions</li>\n<li><code>options</code> (optional): A hash of options. Options are:<ul>\n<li><code>dtype</code>: dtype of output array (only used if output array not specified)</li>\n<li><code>endpoint</code> (boolean): whether the output contains the endpoint of the interval</li>\n</ul>\n</li>\n</ul>\n<p><strong>Returns</strong>: A reference to the output</p>\n<h2 id=\"license\">License</h2>\n<p>&#xA9; 2015 Ricky Reusser. MIT License.</p>\n"}