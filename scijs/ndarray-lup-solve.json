{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/scijs/ndarray-lup-solve\">ndarray-lup-solve</a><div class=\"contrib\"></div></h1>\n<p><a href=\"https://travis-ci.org/scijs/ndarray-lup-solve\"></a> <a href=\"http://badge.fury.io/js/ndarray-lup-solve\"></a>  <a href=\"https://david-dm.org/scijs/ndarray-lup-solve\"></a></p>\n<p>Solve ndarray Ax=b via LU factorization with pivoting</p>\n<h2 id=\"introduction\">Introduction</h2>\n<p>Given an <a href=\"https://www.npmjs.com/package/ndarray-lup-factorization\">LUP factorization</a>, this module solves for x in Ax = b. More precisely, it solves for x in LUx = Pb.</p>\n<h2 id=\"example\">Example</h2>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;lup&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&apos;</span></span><span>ndarray-lup-factorization</span><span class=\"punctuation definition string end js\"><span>&apos;</span></span></span><span class=\"meta brace round js\"><span>)</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;solve&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&apos;</span></span><span>ndarray-lup-solve</span><span class=\"punctuation definition string end js\"><span>&apos;</span></span></span><span class=\"meta brace round js\"><span>)</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;ndarray&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&apos;</span></span><span>ndarray</span><span class=\"punctuation definition string end js\"><span>&apos;</span></span></span><span class=\"meta brace round js\"><span>)</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;pool&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&apos;</span></span><span>ndarray-pool</span><span class=\"punctuation definition string end js\"><span>&apos;</span></span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;A&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>ndarray</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>2</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>4</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>3</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>3</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>8</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>7</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>9</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>5</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>6</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>7</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>9</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>8</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>4</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>4</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;b&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>ndarray</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>13</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>38</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>102</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>107</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>&#xA0;In-place&#xA0;LUP&#xA0;factorization:</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>lup</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span>A</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;A</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;P</span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>solve</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span>&#xA0;A</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;A</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;P</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;b</span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>&#xA0;b&#xA0;now&#xA0;contains&#xA0;the&#xA0;answer&#xA0;x:&#xA0;[2,5,4,3]</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>&#xA0;A&#xA0;and&#xA0;P&#xA0;are&#xA0;unchanged&#xA0;and&#xA0;can&#xA0;be&#xA0;re-used</span><span>&#xA0;</span></span></span></div>\n</code></pre>\n<h2 id=\"usage\">Usage</h2>\n<h4 id=\"-require-ndarray-lup-solve-l-u-p-b-work-\"><code>require(&apos;ndarray-lup-solve&apos;)( L, U, P, b [, work] )</code></h4>\n<ul>\n<li><code>L</code>: The n x n ndarray lower-triangular portion of the LUP factorization. The diagonal entries are implicitly assumed to be 1. Unchanged by the algorithm.</li>\n<li><code>U</code>: The n x n ndarray upper-triangular portion of the LUP factorization. Unchanged by the algorithm.</li>\n<li><code>P</code>: An <code>Array</code> of length n containg the permutation</li>\n<li><code>b</code>: An ndarray of length n containing the righthand side of Ax = b</li>\n<li><code>work</code>: (optional) A vector used to permute the entries. If not provided, it is allocated and released into an <code>ndarray-scratch</code> typed vector pool.</li>\n</ul>\n<p>Returns <code>true</code> on successful completion; <code>false</code> otherwise.</p>\n<h4 id=\"-require-ndarray-lup-solve-lu-lu-p-b-work-\"><code>require(&apos;ndarray-lup-solve&apos;)( LU, LU, P, b [, work] )</code></h4>\n<p>If the first two arguments are identical then it&apos;s understood that both L and U are stored in a single matrix with the diagonal entries of L (all unity) omitted. Usage and behavior is otherwise identical.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>(c) 2015 Ricky Reusser. MIT License</p>\n"}