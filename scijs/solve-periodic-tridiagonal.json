{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/scijs/solve-periodic-tridiagonal\">solve-periodic-tridiagonal   </a><div class=\"contrib\"></div></h1>\n<blockquote>\n<p>Solve a system of linear tridiagonal equations</p>\n</blockquote>\n<h2 id=\"introduction\">Introduction</h2>\n<p>This module accepts javascript Arrays or typed arrays representing the bands of a periodic tridiagonal matrix and computes the solution using the <a href=\"http://www.cfd-online.com/Wiki/Tridiagonal_matrix_algorithm_-_TDMA_(Thomas_algorithm\">Thomas algorithm</a>). The problem in matrix form is</p>\n<p align=\"center\"><img alt=\"\\left[\n\\begin{matrix}\n   {b_0} &amp; {c_0} &amp; {   } &amp; {   } &amp; { a_0 } \\\\\n   {a_1} &amp; {b_1} &amp; {c_1} &amp; {   } &amp; {   } \\\\\n   {   } &amp; {a_2} &amp; {b_2} &amp; \\cdot &amp; {   } \\\\\n   {   } &amp; {   } &amp; \\cdot &amp; \\cdot &amp; {c_{n-2}}\\\\\n   { c_{n-1} } &amp; {   } &amp; {   } &amp; {a_{n-1}} &amp; {b_{n-1}}\\\\\n\\end{matrix}\n\\right]\n\\left[\n\\begin{matrix}\n   {x_0 }  \\\\\n   {x_1 }  \\\\\n   \\cdot   \\\\\n   \\cdot   \\\\\n   {x_{n-1} }  \\\\\n\\end{matrix}\n\\right]\n=\n\\left[\n\\begin{matrix}\n   {d_0 }  \\\\\n   {d_1 }  \\\\\n   \\cdot   \\\\\n   \\cdot   \\\\\n   {d_{n-1} }  \\\\\n\\end{matrix}\n\\right].\" valign=\"middle\" src=\"https://raw.githubusercontent.com/scijs/solve-periodic-tridiagonal/master/images/left-beginmatrix-b_0-c_0-a_0-a_1-b_1-c_1-a_2--2b154af7a7.png\" width=\"445\" height=\"126\"></p>\n\n<p>The solver will fail if the matrix is singular and may not succeed if the matrix is not diagonally dominant. If the solver fails, it will log a console message and return false.</p>\n<h2 id=\"example\">Example</h2>\n<p>Consider the solution of</p>\n<p align=\"center\"><img alt=\"\\left[\n\\begin{matrix}\n   2 &amp; 1 &amp;  0  &amp; 7\\\\\n  -1 &amp; 7 &amp;  4  &amp; 0\\\\\n   0 &amp; 2 &amp; -3  &amp; 2\\\\\n   6 &amp; 0 &amp;  1  &amp; 8\\\\\n\\end{matrix}\n\\right]\n\\left[\n\\begin{matrix}\n   {x_0 }  \\\\\n   {x_1 }  \\\\\n   {x_2 }  \\\\\n   {x_3 }  \\\\\n\\end{matrix}\n\\right]\n=\n\\left[\n\\begin{matrix}\n   {32}  \\\\\n   {25}  \\\\\n   {-5}  \\\\\n   {41}  \\\\\n\\end{matrix}\n\\right].\" valign=\"middle\" src=\"https://raw.githubusercontent.com/scijs/solve-periodic-tridiagonal/master/images/left-beginmatrix-2-1-0-7-1-7-4-0-0-2-3-2-6-0--d0b5be69c1.png\" width=\"299\" height=\"102\"></p>\n\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;triper&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&apos;</span></span><span>solve-periodic-tridiagonal</span><span class=\"punctuation definition string end js\"><span>&apos;</span></span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;d&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>32</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>25</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>3</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>41</span></span><span class=\"meta brace square js\"><span>]</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>triper</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"constant numeric js\"><span>4</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>7</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"keyword operator js\"><span>-</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>2</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>2</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>7</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"keyword operator js\"><span>-</span></span><span class=\"constant numeric js\"><span>3</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>8</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>4</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>2</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>6</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;d</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span><span>]</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>&#xA0;=&gt;&#xA0;d&#xA0;=&#xA0;[&#xA0;1,&#xA0;2,&#xA0;3,&#xA0;4&#xA0;]</span><span>&#xA0;</span></span></span></div>\n</code></pre>\n<h2 id=\"installation\">Installation</h2>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span>$&#xA0;npm&#xA0;install&#xA0;solve</span><span class=\"keyword operator js\"><span>-</span></span><span>periodic</span><span class=\"keyword operator js\"><span>-</span></span><span>tridiagonal</span></span></div>\n</code></pre>\n<h2 id=\"api\">API</h2>\n<h4 id=\"-require-solve-periodic-tridiagonal-n-a-b-c-d-w-\"><code>require(&apos;solve-periodic-tridiagonal&apos;)(n, a, b, c, d, w)</code></h4>\n<p><strong>Arguments</strong>:</p>\n<ul>\n<li><code>n</code>: an integer representing the number of equations in the system</li>\n<li><code>a</code>: a javascript <code>Array</code> or typed array of length n representing the subdiagonal, indexed according to the equation above. Left unchanged by the solver.</li>\n<li><code>b</code>: a javascript <code>Array</code> or typed array of length n representing the diagonal, indexed as above. This vector is modified by the solver.</li>\n<li><code>c</code>: a javascript <code>Array</code> or typed array of length n representing the superdiagonal, indexed as above. This vector is modified by the solver.</li>\n<li><code>d</code>: a javascript <code>Array</code> or typed array of length n representing the known vector d. On successful completion, this vector will contain the solution.</li>\n<li><code>w</code>: a work vector. Must be a javascript <code>Array</code> or typed array of length n.</li>\n</ul>\n<p><strong>Returns</strong>: True on successful completion, false otherwise.</p>\n<h2 id=\"license\">License</h2>\n<p>&#xA9; 2016 Ricky Reusser. MIT License.</p>\n"}