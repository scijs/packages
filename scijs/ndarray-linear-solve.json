{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/scijs/ndarray-linear-solve\">ndarray-linear-solve</a><div class=\"contrib\"></div></h1>\n<p>Solves a system of linear equations, similar to <a href=\"http://www.mathworks.com/help/matlab/ref/mldivide.html\">MATLAB&apos;s backslash operator</a>, but not yet as sophisticated.  (But maybe it will be someday soon!  Pull requests welcome!)</p>\n<p><a href=\"https://ci.testling.com/substack/ndarray-linear-solve\"></a></p>\n<p><a href=\"http://travis-ci.org/substack/ndarray-linear-solve\"></a></p>\n<h2 id=\"example\">example</h2>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;solve&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&apos;</span></span><span>ndarray-linear-solve</span><span class=\"punctuation definition string end js\"><span>&apos;</span></span></span><span class=\"meta brace round js\"><span>)</span></span><span class=\"punctuation terminator statement js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;show&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&apos;</span></span><span>ndarray-show</span><span class=\"punctuation definition string end js\"><span>&apos;</span></span></span><span class=\"meta brace round js\"><span>)</span></span><span class=\"punctuation terminator statement js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;ndarray&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&apos;</span></span><span>ndarray</span><span class=\"punctuation definition string end js\"><span>&apos;</span></span></span><span class=\"meta brace round js\"><span>)</span></span><span class=\"punctuation terminator statement js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;A&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>ndarray</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"meta brace square js\"><span>[</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>2</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"keyword operator js\"><span>-</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"keyword operator js\"><span>-</span></span><span class=\"constant numeric js\"><span>3</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"keyword operator js\"><span>-</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>2</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"keyword operator js\"><span>-</span></span><span class=\"constant numeric js\"><span>2</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>2</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>3</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>3</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>3</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>]</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span><span class=\"punctuation terminator statement js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;B&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>ndarray</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"meta brace square js\"><span>[</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>8</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"keyword operator js\"><span>-</span></span><span class=\"constant numeric js\"><span>11</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"keyword operator js\"><span>-</span></span><span class=\"constant numeric js\"><span>3</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>]</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;X&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>ndarray</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"meta class instance constructor\"><span class=\"keyword operator new js\"><span>new</span></span><span>&#xA0;</span><span class=\"entity name type instance js\"><span>Float64Array</span></span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"constant numeric js\"><span>3</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;r&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>solve</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span>X</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;A</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;B</span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"entity name type object js console\"><span>console</span></span><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"support function js console\"><span>log</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&apos;</span></span><span>input:</span><span class=\"constant character escape js\"><span>\\n</span></span><span class=\"punctuation definition string end js\"><span>&apos;</span></span></span><span>&#xA0;</span><span class=\"keyword operator js\"><span>+</span></span><span>&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>show</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span>A</span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&apos;</span></span><span class=\"constant character escape js\"><span>\\n</span></span><span class=\"punctuation definition string end js\"><span>&apos;</span></span></span><span class=\"meta brace round js\"><span>)</span></span><span class=\"punctuation terminator statement js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"keyword control js\"><span>if</span></span><span>&#xA0;</span><span class=\"meta brace round js\"><span>(</span></span><span>r</span><span class=\"meta brace round js\"><span>)</span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"entity name type object js console\"><span>console</span></span><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"support function js console\"><span>log</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&apos;</span></span><span>solution:</span><span class=\"constant character escape js\"><span>\\n</span></span><span class=\"punctuation definition string end js\"><span>&apos;</span></span></span><span>&#xA0;</span><span class=\"keyword operator js\"><span>+</span></span><span>&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>show</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span>X</span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span><span class=\"meta brace round js\"><span>)</span></span><span class=\"punctuation terminator statement js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta brace curly js\"><span>}</span></span><span>&#xA0;</span><span class=\"keyword control js\"><span>else</span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"entity name type object js console\"><span>console</span></span><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"support function js console\"><span>log</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&apos;</span></span><span>matrix&#xA0;is&#xA0;singular</span><span class=\"punctuation definition string end js\"><span>&apos;</span></span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta brace curly js\"><span>}</span></span></span></div>\n</code></pre>\n<p>output:</p>\n<pre><code>input:\n   2.000    1.000   -1.000\n  -3.000   -1.000    2.000\n  -2.000    1.000    2.000 \n\nsolution:\n   2.000    3.000   -1.000\n</code></pre><h2 id=\"methods\">methods</h2>\n<pre><code class=\"lang-js\"><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;solve&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&apos;</span></span><span>ndarray-linear-solve</span><span class=\"punctuation definition string end js\"><span>&apos;</span></span></span><span class=\"meta brace round js\"><span>)</span></span></span></div>\n</code></pre>\n<h2 id=\"var-solution-solve-x-a-b-\">var solution = solve(X, A, B)</h2>\n<p>Solves the linear system, <code>AX = B</code> for <code>X</code></p>\n<ul>\n<li><code>X</code> is a vector into which the solution is written</li>\n<li><code>A</code> is a matrix encoded as an ndarray</li>\n<li><code>B</code> is a vector, encoded as an ndarray</li>\n</ul>\n<p><strong>Returns</strong> <code>true</code> if the matrix has a solution, otherwise <code>false</code>.</p>\n<h2 id=\"install\">install</h2>\n<p>With <a href=\"https://npmjs.org\">npm</a> do:</p>\n<pre><code>npm install ndarray-linear-solve\n</code></pre><h2 id=\"license\">license</h2>\n<p>MIT</p>\n"}