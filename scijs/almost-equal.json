{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/scijs/almost-equal\">almost-equal</a><div class=\"contrib\"></div></h1>\n<p>Checks when two floats are almost equal.</p>\n<h2 id=\"use\">Use</h2>\n<p>First install using npm:</p>\n<pre><code>npm install almost-equal\n</code></pre><p>Then use as follows:</p>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;almostEqual&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>almost-equal</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;a&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>100</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;b&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>100</span></span><span>&#xA0;</span><span class=\"keyword operator js\"><span>+</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>1e-12</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Check&#xA0;if&#xA0;a&#xA0;==&#xA0;b&#xA0;up&#xA0;to&#xA0;float&#xA0;precision</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"entity name type object js console\"><span>console</span></span><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"support function js console\"><span>log</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>almostEqual</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span>a</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;b</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"variable other object js\"><span>almostEqual</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"constant other property js\"><span>FLT_EPSILON</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"variable other object js\"><span>almostEqual</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"constant other property js\"><span>FLT_EPSILON</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Check&#xA0;if&#xA0;a&#xA0;==&#xA0;b&#xA0;up&#xA0;to&#xA0;double&#xA0;precision</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"entity name type object js console\"><span>console</span></span><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"support function js console\"><span>log</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>almostEqual</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span>a</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;b</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"variable other object js\"><span>almostEqual</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"constant other property js\"><span>DBL_EPSILON</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"variable other object js\"><span>almostEqual</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"constant other property js\"><span>DBL_EPSILON</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span><span class=\"meta brace round js\"><span>)</span></span></span></div>\n</code></pre>\n<h3 id=\"-almostequal-a-b-absolutetolerance-relativetolerance-\"><code>almostEqual(a, b, absoluteTolerance, relativeTolerance)</code></h3>\n<p>Checks if two floats are within the given tolerances of one another using the formula:</p>\n<pre><code>|a - b| &lt; max(absoluteTolerance, min(|a|, |b|) * relativeTolerance)\n</code></pre><ul>\n<li><code>a</code> and <code>b</code> are the two numbers to comapre</li>\n<li><code>absoluteTolerance</code> is a fixed minimal tolerance (set to 0 to ignore)</li>\n<li><code>relativeTolerance</code> is a tolerance that scales with a/b (set to 0 to ignore)</li>\n</ul>\n<p><strong>Returns</strong> <code>true</code> if <code>a</code> and <code>b</code> are approximately equal</p>\n<h3 id=\"-almostequal-flt_epsilon-\"><code>almostEqual.FLT_EPSILON</code></h3>\n<p>Floating point (32-bit) epsilon</p>\n<h3 id=\"-almostequal-dbl_epsilon-\"><code>almostEqual.DBL_EPSILON</code></h3>\n<p>Double precision (64-bit) epsilon</p>\n<h2 id=\"credits\">Credits</h2>\n<p>(c) 2013 Mikola Lysenko. MIT License</p>\n"}