{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/scijs/ndarray-distance\">ndarray-distance</a><div class=\"contrib\"></div></h1>\n<p>Computes the <a href=\"http://en.wikipedia.org/wiki/Lp_space\">Lp distance</a> between two <a href=\"https://github.com/mikolalysenko/ndarray\">ndarrays</a>.  Works both in node.js and in browserify.</p>\n<p><a href=\"http://travis-ci.org/scijs/ndarray-distance\"></a></p>\n<h2 id=\"example\">Example</h2>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;distance&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>ndarray-distance</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;ndarray&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>ndarray</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Create&#xA0;two&#xA0;arrays</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;a&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>ndarray</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>2</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>3</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>4</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>5</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;b&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>ndarray</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>2</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>3</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>10</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>6</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>First&#xA0;compute&#xA0;sum&#xA0;of&#xA0;squared&#xA0;distances</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;l2Dist&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>distance</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span>a</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;b</span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Can&#xA0;also&#xA0;compute&#xA0;l1&#xA0;distance&#xA0;(absolute&#xA0;difference)</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;l1Dist&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>distance</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span>a</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;b</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>1</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>And&#xA0;maximum&#xA0;distance</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;linfDist&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>distance</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span>a</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;b</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant language js\"><span>Infinity</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>And&#xA0;any&#xA0;other&#xA0;Lp&#xA0;distance&#xA0;as&#xA0;well</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;l3Dist&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>distance</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span>a</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;b</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>3</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div>\n</code></pre>\n<h2 id=\"install\">Install</h2>\n<p>Install using <a href=\"https://www.npmjs.com/\">npm</a>:</p>\n<pre><code>npm install ndarray-distance\n</code></pre><h2 id=\"api\">API</h2>\n<h4 id=\"-require-ndarray-distance-a-b-p-\"><code>require(&quot;ndarray-distance&quot;)(a, b[, p])</code></h4>\n<p>Computes the Lp distance between two ndarrays <code>a</code> and <code>b</code>.  That is,</p>\n<pre><code>dist(a,b,p) = ( sum |a[i] - b[i]|^p )^(1/p)\n</code></pre><p>Note that here <code>a</code> and <code>b</code> do not have to be vectors and can be images or volumes.</p>\n<ul>\n<li><code>a</code> and <code>b</code> are both ndarrays with the same shape</li>\n<li><code>p</code> is a parameter that determines the exponent of the metric.  The default value is <code>p=2</code></li>\n</ul>\n<p>Special values of <code>p</code> include:</p>\n<ul>\n<li><code>p=0</code> which counts the number of entries where <code>a</code> and <code>b</code> differ</li>\n<li><code>p=1</code> which is the absolute difference between <code>a</code> and <code>b</code></li>\n<li><code>p=2</code> which is the ordinary Euclidean sum of squared differences</li>\n<li><code>p=Infinity</code> which is the maximum absolute difference between <code>a</code> and <code>b</code></li>\n</ul>\n<p><strong>Returns</strong> The Lp distance between <code>a</code> and <code>b</code></p>\n<h2 id=\"license\">License</h2>\n<p>(c) 2014 Mikola Lysenko. MIT License</p>\n"}