{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/scijs/ndarray-warp\">ndarray-warp</a><div class=\"contrib\"></div></h1>\n<p>Inverse <a href=\"http://www.cs.princeton.edu/courses/archive/fall00/cs426/lectures/warp/warp.pdf\">image warping</a> operations for <a href=\"https://github.com/mikolalysenko/ndarray\">ndarrays</a>.</p>\n<h2 id=\"example\">Example</h2>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Load&#xA0;input&#xA0;image</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;lena&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>luminance</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta brace round js\"><span>)</span><span>(</span></span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>lena</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta brace round js\"><span>)</span><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Allocate&#xA0;storage&#xA0;for&#xA0;result</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;result&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>zeros</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta brace round js\"><span>)</span><span>(</span></span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>512</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>512</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Apply&#xA0;warp</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>ndarray-warp</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta brace round js\"><span>)</span><span>(</span></span><span>result</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;lena</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"meta function js\"><span class=\"storage type function js\"><span>function</span></span><span class=\"punctuation definition parameters begin js\"><span>(</span></span><span class=\"variable parameter function js\"><span>out</span></span><span class=\"meta object delimiter js\"><span>,</span></span><span>&#xA0;</span><span class=\"variable parameter function js\"><span>inp</span></span><span class=\"punctuation definition parameters end js\"><span>)</span></span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;dx&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;inp</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta brace square js\"><span>]</span></span><span>&#xA0;</span><span class=\"keyword operator js\"><span>-</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>256</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;dy&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;inp</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta brace square js\"><span>]</span></span><span>&#xA0;</span><span class=\"keyword operator js\"><span>-</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>256</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;r&#xA0;&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"variable other object js\"><span>Math</span></span><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"support function js\"><span>sqrt</span></span><span class=\"meta brace round js\"><span>(</span></span><span>dx&#xA0;</span><span class=\"keyword operator js\"><span>*</span></span><span>&#xA0;dx&#xA0;</span><span class=\"keyword operator js\"><span>+</span></span><span>&#xA0;dy&#xA0;</span><span class=\"keyword operator js\"><span>*</span></span><span>&#xA0;dy</span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;theta&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"variable other object js\"><span>Math</span></span><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"support function js\"><span>atan2</span></span><span class=\"meta brace round js\"><span>(</span></span><span>dy</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;dx</span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;out</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta brace square js\"><span>]</span></span><span>&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>0.9</span></span><span>&#xA0;</span><span class=\"keyword operator js\"><span>*</span></span><span>&#xA0;r&#xA0;</span><span class=\"keyword operator js\"><span>*</span></span><span>&#xA0;</span><span class=\"variable other object js\"><span>Math</span></span><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"support function js\"><span>cos</span></span><span class=\"meta brace round js\"><span>(</span></span><span>theta&#xA0;</span><span class=\"keyword operator js\"><span>+</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>0.01</span></span><span>&#xA0;</span><span class=\"keyword operator js\"><span>*</span></span><span>&#xA0;r</span><span class=\"meta brace round js\"><span>)</span></span><span>&#xA0;</span><span class=\"keyword operator js\"><span>+</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>256</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;out</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta brace square js\"><span>]</span></span><span>&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>0.7</span></span><span>&#xA0;</span><span class=\"keyword operator js\"><span>*</span></span><span>&#xA0;r&#xA0;</span><span class=\"keyword operator js\"><span>*</span></span><span>&#xA0;</span><span class=\"variable other object js\"><span>Math</span></span><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"support function js\"><span>sin</span></span><span class=\"meta brace round js\"><span>(</span></span><span>theta&#xA0;</span><span class=\"keyword operator js\"><span>+</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>0.01</span></span><span>&#xA0;</span><span class=\"keyword operator js\"><span>*</span></span><span>&#xA0;r</span><span class=\"meta brace round js\"><span>)</span></span><span>&#xA0;</span><span class=\"keyword operator js\"><span>+</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>256</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta brace curly js\"><span>}</span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Save&#xA0;the&#xA0;result&#xA0;to&#xA0;stdout</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>save-pixels</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta brace round js\"><span>)</span><span>(</span></span><span>result</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>png</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta brace round js\"><span>)</span></span><span class=\"meta method-call js\"><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"entity name function js\"><span>pipe</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"variable other object js\"><span>process</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"variable other property js\"><span>stdout</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div>\n</code></pre>\n<p>Which produces the following image:</p>\n<p><img src=\"https://raw.github.com/mikolalysenko/ndarray-warp/master/example/warp.png\"></p>\n<h2 id=\"install\">Install</h2>\n<pre><code>npm install ndarray-warp\n</code></pre><h3 id=\"-require-ndarray-warp-output-input-map-out_coord-in_coord-\"><code>require(&quot;ndarray-warp&quot;)(output, input, map(out_coord, in_coord))</code></h3>\n<p>Applies an inverse warp to an image</p>\n<ul>\n<li><code>output</code> is an ndarray image that gets the result of applying the warp</li>\n<li><code>input</code> is an ndarray iamge that is warped</li>\n<li><p><code>map(result, coord)</code> is a mapping from the coordinates of out image to input image.</p>\n<ul>\n<li><code>result</code> gets the resulting coordinate in <code>input</code></li>\n<li><code>coord</code> is the coordinate in <code>output</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"credits\">Credits</h2>\n<p>(c) 2013 Mikola Lysenko. MIT License</p>\n"}