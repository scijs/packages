{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/scijs/complex-modulus\">complex-modulus</a><div class=\"contrib\"></div></h1>\n<p><a href=\"https://travis-ci.org/scijs/complex-modulus\"></a> <a href=\"http://badge.fury.io/js/complex-modulus\"></a>  <a href=\"https://david-dm.org/scijs/complex-modulus\"></a></p>\n<p>Floating point complex modulus</p>\n<h2 id=\"intro\">Intro</h2>\n<p>Calculating a floating point complex modulus isn&apos;t quite trivial. The naive method may encounter overflow, underflow, or loss of precision due to the intermediate floating point results. A simple remedy<a href=\"#references\">[1]</a> is:</p>\n<p><img src=\"https://raw.githubusercontent.com/scijs/complex-modulus/master/docs/images/modulus.png\" alt=\"Complex modulus\"></p>\n<h2 id=\"usage\">Usage</h2>\n<h5 id=\"-require-complex-modulus-a-b-\"><code>require(&apos;complex-modulus&apos;)( a, b )</code></h5>\n<p>Calculates |a + ib| and returns a number</p>\n<h2 id=\"example\">Example</h2>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;cmod&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&apos;</span></span><span>complex-modulus</span><span class=\"punctuation definition string end js\"><span>&apos;</span></span></span><span class=\"meta brace round js\"><span>)</span></span><span class=\"punctuation terminator statement js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;result&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>cmod</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>3</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>4</span></span><span>&#xA0;</span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span><span class=\"punctuation terminator statement js\"><span>;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>&#xA0;result&#xA0;=&#xA0;5</span><span>&#xA0;</span></span></span></div>\n</code></pre>\n<h2 id=\"references\">References</h2>\n<p>[1] Press, William H. <em><a href=\"https://books.google.com/books?id=1aAOdzK3FegC&amp;pg=PA226&amp;lpg=PA226&amp;dq=complex+division+underflow&amp;source=bl&amp;ots=3jPhF9Irii&amp;sig=JwEAckqmfBNd8dIQTrUD-Pk9dzE&amp;hl=en&amp;sa=X&amp;ei=-VZQVYDpJImRyATAoYCwBg&amp;ved=0CDwQ6AEwBA#v=onepage&amp;q=complex%20division%20underflow&amp;f=false\">Numerical Recipes 3rd Edition: The Art of Scientific Computing</a></em>. Cambridge University Press, 2007.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>(c) 2015 Ricky Reusser. MIT License</p>\n"}