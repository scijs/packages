{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/scijs/ndarray-lup-factorization\">ndarray-lup-factorization</a><div class=\"contrib\"></div></h1>\n<p><a href=\"https://travis-ci.org/scijs/ndarray-lup-factorization\"></a> <a href=\"http://badge.fury.io/js/ndarray-lup-factorization\"></a>  <a href=\"https://david-dm.org/scijs/ndarray-lup-factorization\"></a></p>\n<p>LU factorization with pivoting for ndarrays</p>\n<h2 id=\"introduction\">Introduction</h2>\n<p>This module performs an in-place LUP factorization (LU with partial pivoting) on matrix A. Be advised that the rows are physically swapped which is slightly sub-optimal.</p>\n<p>The resulting factorization is PA = LU where P is a permutation matrix.</p>\n<p>For an alternate version, see: <a href=\"https://github.com/scijs/ndarray-lup-factorization\">ndarray-lup-factorization</a></p>\n<h2 id=\"installation\">Installation</h2>\n<p><code>npm install ndarray-lup-factorization</code></p>\n<h2 id=\"usage\">Usage</h2>\n<p>Sample usage:</p>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;lup&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&apos;</span></span><span>ndarray-lup-factorization</span><span class=\"punctuation definition string end js\"><span>&apos;</span></span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;P&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;A&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>ndarray</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>2</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>6</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>3</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>2</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>2</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>lup</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span>&#xA0;A</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;A</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;P&#xA0;</span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div>\n</code></pre>\n<h4 id=\"-require-ndarray-lup-factorization-a-l-p-\"><code>require(&apos;ndarray-lup-factorization&apos;)( A, L, P )</code></h4>\n<p>Inputs:</p>\n<ul>\n<li>A: An n x n ndarray. This matrix is overwritten during the factorization. At the end of the factorization, the upper-triangular portion contains U and the lower-triangular portion contains zeros.</li>\n<li>L: An n x n ndarray. At the end of the factorization, this array contains the lower-triangular portion of the factorization with ones on the diagonal.</li>\n<li>P: An <code>Array</code>. At the end of the factorization, this contains a vector representation of the permutation matrix. The P[i]th element of the ith row of the permutation matrix is one; all others elements are zero.</li>\n</ul>\n<p>Returns:\n<code>true</code> upon successful completion; <code>false</code> otherwise.</p>\n<h4 id=\"-require-ndarray-lup-factorization-a-a-p-\"><code>require(&apos;ndarray-lup-factorization&apos;)( A, A, P )</code></h4>\n<ul>\n<li>A: An n x n ndarray. If the first and second arguments are identical, both L and U are stored in the A matrix. U is the upper triangular portion (including diagonal) and L is the lower-triangular portion (excluding diagonal; ones on the diagonal are implicit).</li>\n<li>P: An <code>Array</code>. At the end of the factorization, this contains a vector representation of the permutation matrix for which the P[i]th element of the ith row of the permutation matrix is one and all others elements are zero.</li>\n</ul>\n<p>Returns:\n<code>true</code> upon successful completion; <code>false</code> otherwise.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>(c) 2015 Ricky Reusser. MIT License</p>\n"}