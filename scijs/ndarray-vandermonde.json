{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/scijs/ndarray-vandermonde\">ndarray-vandermonde</a><div class=\"contrib\"></div></h1>\n<p><a href=\"https://travis-ci.org/scijs/ndarray-vandermonde\"></a> <a href=\"http://badge.fury.io/js/ndarray-vandermonde\"></a></p>\n<p>Construct an ndarray vandermonde matrix</p>\n<h2 id=\"introduction\">Introduction</h2>\n<p>A <a href=\"http://en.wikipedia.org/wiki/Vandermonde_matrix\">Vandermonde matrix</a> is a matrix with format:</p>\n<p><img src=\"https://raw.githubusercontent.com/scijs/ndarray-vandermonde/master//docs/images/vandermonde.png\" alt=\"Vandermonde\"></p>\n<p>It&apos;s useful for least squares fits, among other things, in which you want a set of basis vectors that are successive powers of a variable evaluated at specific points. It&apos;s usually just plug and chug into QR or SVD in order to solve the least squares problem.</p>\n<h2 id=\"usage\">Usage</h2>\n<p><code>vander( x [, N] [, reversed] )</code></p>\n<p><code>x</code> is a vector of numbers, <code>N</code> is the width of the resulting matrix (i.e. the highest power + 1; the resulting matrix is square by default), and <code>reversed</code> is a flag that will reverse the columns of the resulting matrix so that higher powers are on the left.</p>\n<p>For example,</p>\n<pre><code>var vander = require(&apos;ndarray-vandermonde&apos;),\n    ndarray = require(&apos;ndarray&apos;);\n\nvar x = ndarray(Float64Array([1,2,3,4]));\n\nvar y = vander(x);\n</code></pre><h2 id=\"credits\">Credits</h2>\n<p>(c) 2015 Ricky Reusser. MIT License</p>\n"}