{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/scijs/ndarray-convolve\">ndarray-convolve</a><div class=\"contrib\"></div></h1>\n<p><a href=\"http://en.wikipedia.org/wiki/Convolution\">Convolutions</a> and <a href=\"http://en.wikipedia.org/wiki/Cross-correlation\">cross correlations</a> on <a href=\"https://github.com/mikolalysenko/ndarray\">ndarrays</a>.</p>\n<h2 id=\"example\">Example</h2>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Read&#xA0;in&#xA0;test&#xA0;image</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;lena&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>luminance</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta brace round js\"><span>)</span><span>(</span></span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>lena</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta brace round js\"><span>)</span><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Generate&#xA0;a&#xA0;5-point&#xA0;Laplace&#xA0;filter</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;filter&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>ndarray-pack</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta brace round js\"><span>)</span><span>(</span></span><span class=\"meta brace square js\"><span>[</span><span>[</span></span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"keyword operator js\"><span>-</span></span><span class=\"constant numeric js\"><span>4</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta brace square js\"><span>]</span><span>]</span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Convolve&#xA0;them&#xA0;together</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>ndarray-convolve</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta brace round js\"><span>)</span><span>(</span></span><span>lena</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;filter</span><span class=\"meta brace round js\"><span>)</span></span></span></div>\n</code></pre>\n<p>This produces the following array:</p>\n<p><img src=\"https://raw.github.com/mikolalysenko/ndarray-convolve/master/example/baboon_lap.png\"></p>\n<h2 id=\"install\">Install</h2>\n<pre><code>npm install ndarray-convolve\n</code></pre><h2 id=\"api\">API</h2>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;convolve&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>ndarray-convolve</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta brace round js\"><span>)</span></span></span></div>\n</code></pre>\n<h3 id=\"-convolve-\"><code>convolve( ... )</code></h3>\n<p>Performs a convolution between two images with zero boundary conditions. As long as it does not cause unnecessary cropping, the kernel (<code>b</code>) will be assumed to have its origin in the center of the kernel (for even kernels, slightly to the right of the center, for example <code>[1,2,3,4]</code> would be assumed to have it origin at 3). There are four ways you can call this function:</p>\n<h4 id=\"-convolve-a-b-\"><code>convolve(a, b)</code></h4>\n<p>Convolves <code>a</code> and <code>b</code> storing the result in <code>a</code></p>\n<h4 id=\"-convolve-out-a-b-\"><code>convolve(out, a, b)</code></h4>\n<p>Convolves <code>a</code> and <code>b</code> storing the result in <code>out</code></p>\n<h4 id=\"-convolve-a_r-a_i-b_r-b_i-\"><code>convolve(a_r, a_i, b_r, b_i)</code></h4>\n<p>Convolves two complex arrays storing the result in <code>a_r, a_i</code></p>\n<h4 id=\"-convolve-out_r-out_i-a_r-a_i-b_r-b_i-\"><code>convolve(out_r, out_i, a_r, a_i, b_r, b_i)</code></h4>\n<p>Convolves two complex array storing the result in <code>out_r, out_i</code></p>\n<h3 id=\"-convolve-wrap-\"><code>convolve.wrap( ... )</code></h3>\n<p>Convolves two arrays with periodic boundary conditions.  Same convention as <code>convolve</code></p>\n<h3 id=\"-convolve-correlate-\"><code>convolve.correlate( ... )</code></h3>\n<p>Cross correlates two arrays with zero boundary conditions.  Same convention.</p>\n<h3 id=\"-convolve-correlate-wrap-\"><code>convolve.correlate.wrap( ... )</code></h3>\n<p>Cross correlates two arrays with wrapped boundary conditions.  Same convention again.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>(c) 2013 Mikola Lysenko. MIT License</p>\n"}