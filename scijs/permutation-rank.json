{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/scijs/permutation-rank\">permutation-rank</a><div class=\"contrib\"></div></h1>\n<p>Ranks and unranks permutations.  Based on the following paper:</p>\n<p>W. Myrvold, F. Ruskey. (2000) &quot;<a href=\"http://webhome.cs.uvic.ca/~ruskey/Publications/RankPerm/RankPerm.html\">Ranking and Unranking Permutations in Linear Time</a>&quot;. Information Processing Letters.  </p>\n<h2 id=\"usage\">Usage</h2>\n<p>First install using npm:</p>\n<pre><code>npm install permutation-rank\n</code></pre><p>Then you can use it like this:</p>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;prank&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>permutation-rank</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;perm&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>3</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>2</span></span><span class=\"meta brace square js\"><span>]</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;r&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"variable other object js\"><span>prank</span></span><span class=\"meta method-call js\"><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"entity name function js\"><span>rank</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span>perm</span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"entity name type object js console\"><span>console</span></span><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"support function js console\"><span>log</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>r&#xA0;=&#xA0;</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;r</span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;u&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"variable other object js\"><span>prank</span></span><span class=\"meta method-call js\"><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"entity name function js\"><span>unrank</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"variable other object js\"><span>perm</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"support constant js\"><span>length</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;r</span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"entity name type object js console\"><span>console</span></span><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"support function js console\"><span>log</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>u&#xA0;=&#xA0;</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;u</span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Prints:</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;r&#xA0;=&#xA0;&#xA0;15</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;u&#xA0;=&#xA0;&#xA0;[&#xA0;0,&#xA0;3,&#xA0;1,&#xA0;2&#xA0;]</span><span>&#xA0;</span></span></span></div>\n</code></pre>\n<h3 id=\"-prank-rank-permutation-\"><code>prank.rank(permutation)</code></h3>\n<p>Computes an integer representing the colexicographic rank of the permutation</p>\n<ul>\n<li><code>permutation</code> is an array encoding some permutation</li>\n</ul>\n<p><strong>Returns</strong> An integer representing the ranked encoding of the permutation</p>\n<h3 id=\"-prank-unrank-length-rank-result-\"><code>prank.unrank(length, rank[, result])</code></h3>\n<p>Computes a permutation from a rank order with the given length</p>\n<ul>\n<li><code>length</code> is the length of the permuation</li>\n<li><code>rank</code> is the index of the permutation</li>\n<li><code>result</code> is an optional argument which stores the result of the inversion</li>\n</ul>\n<p><strong>Returns</strong> The permutation at the given rank</p>\n<h2 id=\"credits\">Credits</h2>\n<p>(c) 2013 Mikola Lysenko. MIT License</p>\n"}