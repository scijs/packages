{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/scijs/cwise\">cwise</a><div class=\"contrib\"></div></h1>\n<p>This library can be used to generate cache efficient map/reduce operations for <a href=\"http://github.com/mikolalysenko/ndarray\">ndarrays</a>.</p>\n<p><a href=\"http://travis-ci.org/scijs/cwise\"></a></p>\n<h2 id=\"examples\">Examples</h2>\n<p>For brevity, we will assume the following precedes each example: </p>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Import&#xA0;libraries</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;cwise&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>cwise</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;ndarray&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>ndarray</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta brace round js\"><span>)</span></span></span></div>\n</code></pre>\n<h2 id=\"adding-two-arrays\">Adding two arrays</h2>\n<p>The array equivalent of <code>+=</code>:</p>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Create&#xA0;operation</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;addeq&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>cwise</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"meta brace curly js\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;args</span><span class=\"keyword operator js\"><span>:</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>array</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>array</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"meta function json js\"><span class=\"entity name function js\"><span>body</span></span><span class=\"keyword operator assignment js\"><span>:</span></span><span>&#xA0;</span><span class=\"storage type function js\"><span>function</span></span><span class=\"punctuation definition parameters begin js\"><span>(</span></span><span class=\"variable parameter function js\"><span>a</span></span><span class=\"meta object delimiter js\"><span>,</span></span><span>&#xA0;</span><span class=\"variable parameter function js\"><span>b</span></span><span class=\"punctuation definition parameters end js\"><span>)</span></span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;a&#xA0;</span><span class=\"keyword operator assignment compound js\"><span>+=</span></span><span>&#xA0;b</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"meta brace curly js\"><span>}</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;</span><span class=\"meta brace curly js\"><span>}</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Create&#xA0;two&#xA0;2D&#xA0;arrays</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;X&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>ndarray</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"meta class instance constructor\"><span class=\"keyword operator new js\"><span>new</span></span><span>&#xA0;</span><span class=\"entity name type instance js\"><span>Float32Array</span></span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"constant numeric js\"><span>128</span></span><span class=\"keyword operator js\"><span>*</span></span><span class=\"constant numeric js\"><span>128</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>128</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>128</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;Y&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>ndarray</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"meta class instance constructor\"><span class=\"keyword operator new js\"><span>new</span></span><span>&#xA0;</span><span class=\"entity name type instance js\"><span>Float32Array</span></span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"constant numeric js\"><span>128</span></span><span class=\"keyword operator js\"><span>*</span></span><span class=\"constant numeric js\"><span>128</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>128</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>128</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Add&#xA0;them&#xA0;together</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>addeq</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span>X</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;Y</span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div>\n</code></pre>\n<p>Formally, you can think of <code>addeq(X,Y)</code> as being something like the following for-loop, except optimized with respect to the dimension and order of X and Y:</p>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span class=\"keyword control js\"><span>for</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;i</span><span class=\"keyword operator assignment js\"><span>=</span></span><span class=\"constant numeric js\"><span>0</span></span><span class=\"punctuation terminator statement js\"><span>;</span></span><span>&#xA0;i</span><span class=\"keyword operator comparison js\"><span>&lt;</span></span><span class=\"variable other object js\"><span>X</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"support constant dom js\"><span>shape</span></span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"punctuation terminator statement js\"><span>;</span></span><span>&#xA0;</span><span class=\"keyword operator increment js\"><span>++</span></span><span>i</span><span class=\"meta brace round js\"><span>)</span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"keyword control js\"><span>for</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;j</span><span class=\"keyword operator assignment js\"><span>=</span></span><span class=\"constant numeric js\"><span>0</span></span><span class=\"punctuation terminator statement js\"><span>;</span></span><span>&#xA0;j</span><span class=\"keyword operator comparison js\"><span>&lt;</span></span><span class=\"variable other object js\"><span>X</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"support constant dom js\"><span>shape</span></span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"punctuation terminator statement js\"><span>;</span></span><span>&#xA0;</span><span class=\"keyword operator increment js\"><span>++</span></span><span>j</span><span class=\"meta brace round js\"><span>)</span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"variable other object js\"><span>X</span></span><span class=\"meta method-call js\"><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"entity name function js\"><span>set</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span>i</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>j</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"variable other object js\"><span>X</span></span><span class=\"meta method-call js\"><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"entity name function js\"><span>get</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span>i</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>j</span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span><span>&#xA0;</span><span class=\"keyword operator js\"><span>+</span></span><span>&#xA0;</span><span class=\"variable other object js\"><span>Y</span></span><span class=\"meta method-call js\"><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"entity name function js\"><span>get</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span>i</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>j</span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"meta brace curly js\"><span>}</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta brace curly js\"><span>}</span></span></span></div>\n</code></pre>\n<h2 id=\"multiply-an-array-with-a-scalar\">Multiply an array with a scalar</h2>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;muls&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>cwise</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"meta brace curly js\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;args</span><span class=\"keyword operator js\"><span>:</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>array</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>scalar</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;</span><span class=\"meta function json js\"><span class=\"entity name function js\"><span>body</span></span><span class=\"keyword operator assignment js\"><span>:</span></span><span>&#xA0;</span><span class=\"storage type function js\"><span>function</span></span><span class=\"punctuation definition parameters begin js\"><span>(</span></span><span class=\"variable parameter function js\"><span>a</span></span><span class=\"meta object delimiter js\"><span>,</span></span><span>&#xA0;</span><span class=\"variable parameter function js\"><span>s</span></span><span class=\"punctuation definition parameters end js\"><span>)</span></span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;a&#xA0;</span><span class=\"keyword operator assignment compound js\"><span>*=</span></span><span>&#xA0;s</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;</span><span class=\"meta brace curly js\"><span>}</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span class=\"meta brace curly js\"><span>}</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Example&#xA0;usage:</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>muls</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span>array</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>2.0</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div>\n</code></pre>\n<h2 id=\"initialize-an-array-with-a-grid-with-the-first-index\">Initialize an array with a grid with the first index</h2>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;mgrid&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>cwise</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"meta brace curly js\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;args</span><span class=\"keyword operator js\"><span>:</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>index</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>array</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;</span><span class=\"meta function json js\"><span class=\"entity name function js\"><span>body</span></span><span class=\"keyword operator assignment js\"><span>:</span></span><span>&#xA0;</span><span class=\"storage type function js\"><span>function</span></span><span class=\"punctuation definition parameters begin js\"><span>(</span></span><span class=\"variable parameter function js\"><span>i</span></span><span class=\"meta object delimiter js\"><span>,</span></span><span>&#xA0;</span><span class=\"variable parameter function js\"><span>a</span></span><span class=\"punctuation definition parameters end js\"><span>)</span></span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;a&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;i</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta brace square js\"><span>]</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;</span><span class=\"meta brace curly js\"><span>}</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span class=\"meta brace curly js\"><span>}</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Example&#xA0;usage:</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;X&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>mgrid</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>ndarray</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"meta class instance constructor\"><span class=\"keyword operator new js\"><span>new</span></span><span>&#xA0;</span><span class=\"entity name type instance js\"><span>Float32Array</span></span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"constant numeric js\"><span>128</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span><span class=\"meta brace round js\"><span>)</span></span></span></div>\n</code></pre>\n<h2 id=\"compute-2d-vector-norms-using-blocks\">Compute 2D vector norms using blocks</h2>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;norm2D&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>cwise</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"meta brace curly js\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;args</span><span class=\"keyword operator js\"><span>:</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>array</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span><span>blockIndices</span><span class=\"keyword operator js\"><span>:</span></span><span>&#xA0;</span><span class=\"keyword operator js\"><span>-</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta brace curly js\"><span>}</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;</span><span class=\"meta function json js\"><span class=\"entity name function js\"><span>body</span></span><span class=\"keyword operator assignment js\"><span>:</span></span><span>&#xA0;</span><span class=\"storage type function js\"><span>function</span></span><span class=\"punctuation definition parameters begin js\"><span>(</span></span><span class=\"variable parameter function js\"><span>o</span></span><span class=\"meta object delimiter js\"><span>,</span></span><span>&#xA0;</span><span class=\"variable parameter function js\"><span>i</span></span><span class=\"punctuation definition parameters end js\"><span>)</span></span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;o&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"variable other object js\"><span>Math</span></span><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"support function js\"><span>sqrt</span></span><span class=\"meta brace round js\"><span>(</span></span><span>i</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"keyword operator js\"><span>*</span></span><span>i</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta brace square js\"><span>]</span></span><span>&#xA0;</span><span class=\"keyword operator js\"><span>+</span></span><span>&#xA0;i</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"keyword operator js\"><span>*</span></span><span>i</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"meta brace curly js\"><span>}</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta brace curly js\"><span>}</span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Example&#xA0;usage:</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;o&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>ndarray</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>3</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>norm2D</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span>o</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>ndarray</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>2</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>3</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>4</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>5</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>6</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>3</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>2</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>&#xA0;o.data&#xA0;==&#xA0;[&#xA0;2.23606797749979,&#xA0;5,&#xA0;7.810249675906654&#xA0;]</span><span>&#xA0;</span></span></span></div>\n</code></pre>\n<p>Note that in the above, <code>i</code> is not an actual <code>Array</code>, the indexing notation is just syntactic sugar.</p>\n<h2 id=\"apply-a-stencil-to-an-array\">Apply a stencil to an array</h2>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;laplacian&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>cwise</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"meta brace curly js\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;args</span><span class=\"keyword operator js\"><span>:</span></span><span class=\"meta brace square js\"><span>[</span></span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>array</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>array</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span><span>offset</span><span class=\"keyword operator js\"><span>:</span></span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;array</span><span class=\"keyword operator js\"><span>:</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta brace curly js\"><span>}</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span><span>offset</span><span class=\"keyword operator js\"><span>:</span></span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"keyword operator js\"><span>-</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;array</span><span class=\"keyword operator js\"><span>:</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta brace curly js\"><span>}</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span><span>offset</span><span class=\"keyword operator js\"><span>:</span></span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;array</span><span class=\"keyword operator js\"><span>:</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta brace curly js\"><span>}</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span><span>offset</span><span class=\"keyword operator js\"><span>:</span></span><span class=\"meta brace square js\"><span>[</span></span><span class=\"keyword operator js\"><span>-</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;array</span><span class=\"keyword operator js\"><span>:</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta brace curly js\"><span>}</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;</span><span class=\"meta function json js\"><span class=\"entity name function js\"><span>body</span></span><span class=\"keyword operator assignment js\"><span>:</span></span><span class=\"storage type function js\"><span>function</span></span><span class=\"punctuation definition parameters begin js\"><span>(</span></span><span class=\"variable parameter function js\"><span>a</span></span><span class=\"meta object delimiter js\"><span>,</span></span><span>&#xA0;</span><span class=\"variable parameter function js\"><span>c</span></span><span class=\"meta object delimiter js\"><span>,</span></span><span>&#xA0;</span><span class=\"variable parameter function js\"><span>n</span></span><span class=\"meta object delimiter js\"><span>,</span></span><span>&#xA0;</span><span class=\"variable parameter function js\"><span>s</span></span><span class=\"meta object delimiter js\"><span>,</span></span><span>&#xA0;</span><span class=\"variable parameter function js\"><span>e</span></span><span class=\"meta object delimiter js\"><span>,</span></span><span>&#xA0;</span><span class=\"variable parameter function js\"><span>w</span></span><span class=\"punctuation definition parameters end js\"><span>)</span></span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;a&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>0.25</span></span><span>&#xA0;</span><span class=\"keyword operator js\"><span>*</span></span><span>&#xA0;</span><span class=\"meta brace round js\"><span>(</span></span><span>n&#xA0;</span><span class=\"keyword operator js\"><span>+</span></span><span>&#xA0;s&#xA0;</span><span class=\"keyword operator js\"><span>+</span></span><span>&#xA0;e&#xA0;</span><span class=\"keyword operator js\"><span>+</span></span><span>&#xA0;w</span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span><span>&#xA0;</span><span class=\"keyword operator js\"><span>-</span></span><span>&#xA0;c</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"meta brace curly js\"><span>}</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta brace curly js\"><span>}</span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>laplacian</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span>next</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;prev</span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div>\n</code></pre>\n<h2 id=\"compute-the-sum-of-all-the-elements-in-an-array\">Compute the sum of all the elements in an array</h2>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;sum&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>cwise</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"meta brace curly js\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;args</span><span class=\"keyword operator js\"><span>:</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>array</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;</span><span class=\"meta function json js\"><span class=\"entity name function js\"><span>pre</span></span><span class=\"keyword operator assignment js\"><span>:</span></span><span>&#xA0;</span><span class=\"storage type function js\"><span>function</span></span><span class=\"punctuation definition parameters begin js\"><span>(</span></span><span class=\"punctuation definition parameters end js\"><span>)</span></span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"variable language js\"><span>this</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"variable other property js\"><span>sum</span></span><span>&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>0</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;</span><span class=\"meta brace curly js\"><span>}</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;</span><span class=\"meta function json js\"><span class=\"entity name function js\"><span>body</span></span><span class=\"keyword operator assignment js\"><span>:</span></span><span>&#xA0;</span><span class=\"storage type function js\"><span>function</span></span><span class=\"punctuation definition parameters begin js\"><span>(</span></span><span class=\"variable parameter function js\"><span>a</span></span><span class=\"punctuation definition parameters end js\"><span>)</span></span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"variable language js\"><span>this</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"variable other property js\"><span>sum</span></span><span>&#xA0;</span><span class=\"keyword operator assignment compound js\"><span>+=</span></span><span>&#xA0;a</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;</span><span class=\"meta brace curly js\"><span>}</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;</span><span class=\"meta function json js\"><span class=\"entity name function js\"><span>post</span></span><span class=\"keyword operator assignment js\"><span>:</span></span><span>&#xA0;</span><span class=\"storage type function js\"><span>function</span></span><span class=\"punctuation definition parameters begin js\"><span>(</span></span><span class=\"punctuation definition parameters end js\"><span>)</span></span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"keyword control js\"><span>return</span></span><span>&#xA0;</span><span class=\"variable language js\"><span>this</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"variable other property js\"><span>sum</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;</span><span class=\"meta brace curly js\"><span>}</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span class=\"meta brace curly js\"><span>}</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Usage:</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>s&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>sum</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span>array</span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div>\n</code></pre>\n<p>Note that variables stored in <code>this</code> are common to all three code blocks. Also note that one should not treat <code>this</code> as an actual object (for example, one should not attempt to return <code>this</code>).</p>\n<h2 id=\"check-if-any-element-is-set\">Check if any element is set</h2>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;any&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>cwise</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"meta brace curly js\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;args</span><span class=\"keyword operator js\"><span>:</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>array</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;</span><span class=\"meta function json js\"><span class=\"entity name function js\"><span>body</span></span><span class=\"keyword operator assignment js\"><span>:</span></span><span>&#xA0;</span><span class=\"storage type function js\"><span>function</span></span><span class=\"punctuation definition parameters begin js\"><span>(</span></span><span class=\"variable parameter function js\"><span>a</span></span><span class=\"punctuation definition parameters end js\"><span>)</span></span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"keyword control js\"><span>if</span></span><span class=\"meta brace round js\"><span>(</span></span><span>a</span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"keyword control js\"><span>return</span></span><span>&#xA0;</span><span class=\"constant language boolean true js\"><span>true</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"meta brace curly js\"><span>}</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"meta brace curly js\"><span>}</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"meta function json js\"><span class=\"entity name function js\"><span>post</span></span><span class=\"keyword operator assignment js\"><span>:</span></span><span>&#xA0;</span><span class=\"storage type function js\"><span>function</span></span><span class=\"punctuation definition parameters begin js\"><span>(</span></span><span class=\"punctuation definition parameters end js\"><span>)</span></span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"keyword control js\"><span>return</span></span><span>&#xA0;</span><span class=\"constant language boolean false js\"><span>false</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"meta brace curly js\"><span>}</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta brace curly js\"><span>}</span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Usage</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"keyword control js\"><span>if</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>any</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span>array</span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span><span class=\"meta brace round js\"><span>)</span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"punctuation whitespace comment leading js\"><span>&#xA0;&#xA0;</span></span><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>&#xA0;...</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta brace curly js\"><span>}</span></span></span></div>\n</code></pre>\n<h2 id=\"compute-the-index-of-the-maximum-element-of-an-array-\">Compute the index of the maximum element of an array:</h2>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;argmin&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>cwise</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"meta brace curly js\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;args</span><span class=\"keyword operator js\"><span>:</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>index</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>array</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;</span><span class=\"meta function json js\"><span class=\"entity name function js\"><span>pre</span></span><span class=\"keyword operator assignment js\"><span>:</span></span><span>&#xA0;</span><span class=\"storage type function js\"><span>function</span></span><span class=\"punctuation definition parameters begin js\"><span>(</span></span><span class=\"variable parameter function js\"><span>index</span></span><span class=\"punctuation definition parameters end js\"><span>)</span></span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"variable language js\"><span>this</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"variable other property js\"><span>min_v</span></span><span>&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"variable other object js\"><span>Number</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"support constant js\"><span>POSITIVE_INFINITY</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"variable language js\"><span>this</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"variable other property js\"><span>min_index</span></span><span>&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"variable other object js\"><span>index</span></span><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"support function js\"><span>slice</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"constant numeric js\"><span>0</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"meta brace curly js\"><span>}</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"meta function json js\"><span class=\"entity name function js\"><span>body</span></span><span class=\"keyword operator assignment js\"><span>:</span></span><span>&#xA0;</span><span class=\"storage type function js\"><span>function</span></span><span class=\"punctuation definition parameters begin js\"><span>(</span></span><span class=\"variable parameter function js\"><span>index</span></span><span class=\"meta object delimiter js\"><span>,</span></span><span>&#xA0;</span><span class=\"variable parameter function js\"><span>a</span></span><span class=\"punctuation definition parameters end js\"><span>)</span></span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"keyword control js\"><span>if</span></span><span class=\"meta brace round js\"><span>(</span></span><span>a&#xA0;</span><span class=\"keyword operator comparison js\"><span>&lt;</span></span><span>&#xA0;</span><span class=\"variable language js\"><span>this</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"variable other property js\"><span>min_v</span></span><span class=\"meta brace round js\"><span>)</span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"variable language js\"><span>this</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"variable other property js\"><span>min_v</span></span><span>&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;a</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"keyword control js\"><span>for</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;i</span><span class=\"keyword operator assignment js\"><span>=</span></span><span class=\"constant numeric js\"><span>0</span></span><span class=\"punctuation terminator statement js\"><span>;</span></span><span>&#xA0;i</span><span class=\"keyword operator comparison js\"><span>&lt;</span></span><span class=\"variable other object js\"><span>index</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"support constant js\"><span>length</span></span><span class=\"punctuation terminator statement js\"><span>;</span></span><span>&#xA0;</span><span class=\"keyword operator increment js\"><span>++</span></span><span>i</span><span class=\"meta brace round js\"><span>)</span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"variable language js\"><span>this</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"variable other property js\"><span>min_index</span></span><span class=\"meta brace square js\"><span>[</span></span><span>i</span><span class=\"meta brace square js\"><span>]</span></span><span>&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;index</span><span class=\"meta brace square js\"><span>[</span></span><span>i</span><span class=\"meta brace square js\"><span>]</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"meta brace curly js\"><span>}</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"meta brace curly js\"><span>}</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"meta brace curly js\"><span>}</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"meta function json js\"><span class=\"entity name function js\"><span>post</span></span><span class=\"keyword operator assignment js\"><span>:</span></span><span>&#xA0;</span><span class=\"storage type function js\"><span>function</span></span><span class=\"punctuation definition parameters begin js\"><span>(</span></span><span class=\"punctuation definition parameters end js\"><span>)</span></span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"keyword control js\"><span>return</span></span><span>&#xA0;</span><span class=\"variable language js\"><span>this</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"variable other property js\"><span>min_index</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"meta brace curly js\"><span>}</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta brace curly js\"><span>}</span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Usage:</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>argmin</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span>X</span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div>\n</code></pre>\n<h2 id=\"install\">Install</h2>\n<p>Install using <a href=\"https://www.npmjs.com/\">npm</a>:</p>\n<pre><code>npm install cwise\n</code></pre><h2 id=\"api\">API</h2>\n<h4 id=\"-require-cwise-user_args-\"><code>require(&quot;cwise&quot;)(user_args)</code></h4>\n<p>To use the library, you pass it an object with the following fields:</p>\n<ul>\n<li><code>args</code>: (Required) An array describing the type of the arguments passed to the body.  These may be one of the following:<ul>\n<li><code>&quot;array&quot;</code>: An <code>ndarray</code>-type argument</li>\n<li><code>&quot;scalar&quot;</code>: A globally broadcasted scalar argument</li>\n<li><code>&quot;index&quot;</code>: (Hidden) An array representing the current index of the element being processed.  Initially [0,0,...] in the pre block and set to some undefined value in the post block.</li>\n<li><code>&quot;shape&quot;</code>: (Hidden) An array representing the shape of the arrays being processed</li>\n<li>An object representing a &quot;blocked&quot; array (for example a colour image, an array of matrices, etc.):<ul>\n<li><code>blockIndices</code> The number of indices (from the front of the array shape) to expose in the body (rather than iterating over them). Negative integers take indices from the back of the array shape.</li>\n</ul>\n</li>\n<li>(Hidden) An object containing two properties representing an offset pointer from an array argument. Note that cwise does not implement any boundary conditions.<ul>\n<li><code>offset</code> An array representing the relative offset of the object</li>\n<li><code>array</code> The index of an array parameter</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><code>pre</code>: A function to be executed before starting the loop</li>\n<li><code>body</code>: (Required) A function that gets applied to each element of the input arrays</li>\n<li><code>post</code>: Executed when loop completes</li>\n<li><code>printCode</code>: If this flag is set, then log all generated code</li>\n<li><code>blockSize</code>: The size of a block (default 32)</li>\n<li><code>funcName</code>: The name to give to the generated procedure for debugging/profiling purposes.  (Default is <code>body.name||&quot;cwise&quot;</code>)</li>\n</ul>\n<p>The result is a procedure that you can call which executes these methods along the following lines:</p>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span class=\"meta function js\"><span class=\"storage type function js\"><span>function</span></span><span class=\"punctuation definition parameters begin js\"><span>(</span></span><span class=\"variable parameter function js\"><span>a0</span></span><span class=\"meta object delimiter js\"><span>,</span></span><span>&#xA0;</span><span class=\"variable parameter function js\"><span>a1</span></span><span class=\"meta object delimiter js\"><span>,</span></span><span>&#xA0;...</span><span class=\"punctuation definition parameters end js\"><span>)</span></span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>pre</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"keyword control js\"><span>for</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;i</span><span class=\"keyword operator assignment js\"><span>=</span></span><span class=\"constant numeric js\"><span>0</span></span><span class=\"punctuation terminator statement js\"><span>;</span></span><span>&#xA0;i</span><span class=\"keyword operator comparison js\"><span>&lt;</span></span><span class=\"variable other object js\"><span>a0</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"support constant dom js\"><span>shape</span></span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>0</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"punctuation terminator statement js\"><span>;</span></span><span>&#xA0;</span><span class=\"keyword operator increment js\"><span>++</span></span><span>i</span><span class=\"meta brace round js\"><span>)</span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"keyword control js\"><span>for</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;j</span><span class=\"keyword operator assignment js\"><span>=</span></span><span class=\"constant numeric js\"><span>0</span></span><span class=\"punctuation terminator statement js\"><span>;</span></span><span>&#xA0;j</span><span class=\"keyword operator comparison js\"><span>&lt;</span></span><span class=\"variable other object js\"><span>a0</span></span><span class=\"meta delimiter property period js\"><span>.</span></span><span class=\"support constant dom js\"><span>shape</span></span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"punctuation terminator statement js\"><span>;</span></span><span>&#xA0;</span><span class=\"keyword operator increment js\"><span>++</span></span><span>j</span><span class=\"meta brace round js\"><span>)</span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"keyword operator spread js\"><span>...</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>body</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span>a0</span><span class=\"meta brace square js\"><span>[</span></span><span>i</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>j</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"keyword operator spread js\"><span>...</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;a1</span><span class=\"meta brace square js\"><span>[</span></span><span>i</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>j</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"keyword operator spread js\"><span>...</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"keyword operator spread js\"><span>...</span></span><span>&#xA0;</span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"meta brace curly js\"><span>}</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"meta brace curly js\"><span>}</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>post</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta brace curly js\"><span>}</span></span></span></div>\n</code></pre>\n<h3 id=\"notes\">Notes</h3>\n<ul>\n<li>To pass variables between the pre/body/post, use <code>this.*</code></li>\n<li>The order in which variables get visited depends on the stride ordering if the input arrays.  In general it is not safe to assume that elements get visited (co)lexicographically.</li>\n<li>If no return statement is specified, the first ndarray argument is returned</li>\n<li>All input arrays must have the same shape.  If not, then the library will throw an error</li>\n</ul>\n<h3 id=\"as-a-browserify-transform\">As a browserify transform</h3>\n<p>If bundle size is an issue for you, it is possible to use cwise as a <a href=\"http://browserify.org/\">browserify transform</a>, thus avoiding the potentially large parser dependencies.  To do this, add the following lines to your package.json:</p>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Contents&#xA0;of&#xA0;package.json</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta brace curly js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"punctuation whitespace comment leading js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span></span><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>&#xA0;...</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>browserify</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"keyword operator js\"><span>:</span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>transform</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span class=\"keyword operator js\"><span>:</span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>[</span></span><span>&#xA0;</span><span class=\"string quoted double js\"><span class=\"punctuation definition string begin js\"><span>&quot;</span></span><span>cwise</span><span class=\"punctuation definition string end js\"><span>&quot;</span></span></span><span>&#xA0;</span><span class=\"meta brace square js\"><span>]</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"meta brace curly js\"><span>}</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"punctuation whitespace comment leading js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span></span><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>&#xA0;...</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta brace curly js\"><span>}</span></span></span></div>\n</code></pre>\n<p>Then when you use the module with browserify, only the cwise-compile submodule will get loaded into your script instead of all of esprima. Note that this step is optional and the library will still work in the browser even if you don&apos;t use a transform.</p>\n<h2 id=\"faq\">FAQ</h2>\n<h2 id=\"is-it-fast-\">Is it fast?</h2>\n<p><a href=\"https://github.com/mikolalysenko/ndarray-experiments\">Yes</a></p>\n<h2 id=\"how-does-it-work-\">How does it work?</h2>\n<p>You can think of cwise as a type of macro language on top of JavaScript.  Internally, cwise uses node-falafel to parse the functions you give it and sanitize their arguments.  At run time, code for each array operation is generated lazily depending on the ordering and stride of the input arrays so that you get optimal cache performance.  These compiled functions are then memoized for future calls to the same function.  As a result, you should reuse array operations as much as possible to avoid wasting time and memory regenerating common functions.</p>\n<h2 id=\"license\">License</h2>\n<p>(c) 2013 Mikola Lysenko. MIT License</p>\n"}