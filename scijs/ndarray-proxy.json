{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/scijs/ndarray-proxy\">ndarray-proxy</a><div class=\"contrib\"></div></h1>\n<p>Creates proxies for <a href=\"https://github.com/mikolalysenko/ndarray\">ndarrays</a>.  These give a logical view of a function as an ndarray.</p>\n<h2 id=\"introduction\">Introduction</h2>\n<p>Proxy ndarrays work just like ndarrays, and can be used in all the same ways.  However, unlike dense arrays they do not keep any storage and instead use a function to determine the contents of the array.  Here is a simple example:</p>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;proxy&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"support function js\"><span>require</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&apos;</span></span><span>ndarray-proxy</span><span class=\"punctuation definition string end js\"><span>&apos;</span></span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Create&#xA0;a&#xA0;10x10&#xA0;proxy&#xA0;ndarray</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;x&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>proxy</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>10</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>10</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"meta function js\"><span class=\"storage type function js\"><span>function</span></span><span class=\"punctuation definition parameters begin js\"><span>(</span></span><span class=\"variable parameter function js\"><span>i</span></span><span class=\"meta object delimiter js\"><span>,</span></span><span>&#xA0;</span><span class=\"variable parameter function js\"><span>j</span></span><span class=\"punctuation definition parameters end js\"><span>)</span></span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;</span><span class=\"entity name type object js console\"><span>console</span></span><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"support function js console\"><span>log</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&apos;</span></span><span>Called:</span><span class=\"punctuation definition string end js\"><span>&apos;</span></span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;i</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;j</span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;</span><span class=\"keyword control js\"><span>return</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>10</span></span><span class=\"keyword operator js\"><span>*</span></span><span>i&#xA0;</span><span class=\"keyword operator js\"><span>+</span></span><span>&#xA0;j</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta brace curly js\"><span>}</span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"variable other object js\"><span>x</span></span><span class=\"meta method-call js\"><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"entity name function js\"><span>get</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>2</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Prints&#xA0;out:&#xA0;&#xA0;&#xA0;Called:&#xA0;1&#xA0;2</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"variable other object js\"><span>x</span></span><span class=\"meta method-call js\"><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"entity name function js\"><span>get</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"constant numeric js\"><span>7</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>8</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Prints&#xA0;out:&#xA0;&#xA0;&#xA0;Called:&#xA0;7&#xA0;8</span><span>&#xA0;</span></span></span></div>\n</code></pre>\n<p>It is possible to slice the view of a proxy ndarray, just like a regular ndarray:</p>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span class=\"variable other object js\"><span>x</span></span><span class=\"meta method-call js\"><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"entity name function js\"><span>lo</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"constant numeric js\"><span>2</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>3</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"entity name function js\"><span>get</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Prints&#xA0;out:&#xA0;&#xA0;Called:&#xA0;3&#xA0;4</span><span>&#xA0;</span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"variable other object js\"><span>x</span></span><span class=\"meta method-call js\"><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"entity name function js\"><span>transpose</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"constant numeric js\"><span>1</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>0</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"entity name function js\"><span>get</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"constant numeric js\"><span>3</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>7</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Prints&#xA0;out:&#xA0;&#xA0;Called:&#xA0;7&#xA0;3</span><span>&#xA0;</span></span></span></div>\n</code></pre>\n<p>You can use lazy ndarrays with cwise or any other library that works with ndarrays.</p>\n<p>It is also possible to add a setter to the proxy ndarray to implement custom assignment operations.  For example:</p>\n<pre><code class=\"lang-javascript\"><div class=\"line\"><span class=\"source js\"><span class=\"storage type var js\"><span>var</span></span><span>&#xA0;y&#xA0;</span><span class=\"keyword operator assignment js\"><span>=</span></span><span>&#xA0;</span><span class=\"meta function-call js\"><span class=\"entity name function js\"><span>proxy</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"meta brace square js\"><span>[</span></span><span class=\"constant numeric js\"><span>10</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>10</span></span><span class=\"meta brace square js\"><span>]</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"meta function js\"><span class=\"storage type function js\"><span>function</span></span><span class=\"punctuation definition parameters begin js\"><span>(</span></span><span class=\"variable parameter function js\"><span>i</span></span><span class=\"meta object delimiter js\"><span>,</span></span><span class=\"variable parameter function js\"><span>j</span></span><span class=\"punctuation definition parameters end js\"><span>)</span></span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span><span>&#xA0;</span><span class=\"keyword control js\"><span>return</span></span><span>&#xA0;</span><span class=\"constant numeric js\"><span>10</span></span><span class=\"keyword operator js\"><span>*</span></span><span>i</span><span class=\"keyword operator js\"><span>+</span></span><span>j</span><span class=\"punctuation terminator statement js\"><span>;</span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>}</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"meta function js\"><span class=\"storage type function js\"><span>function</span></span><span class=\"punctuation definition parameters begin js\"><span>(</span></span><span class=\"variable parameter function js\"><span>i</span></span><span class=\"meta object delimiter js\"><span>,</span></span><span class=\"variable parameter function js\"><span>j</span></span><span class=\"meta object delimiter js\"><span>,</span></span><span class=\"variable parameter function js\"><span>v</span></span><span class=\"punctuation definition parameters end js\"><span>)</span></span></span><span>&#xA0;</span><span class=\"meta brace curly js\"><span>{</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"meta function-call js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"entity name type object js console\"><span>console</span></span><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"support function js console\"><span>log</span></span><span class=\"meta brace round js\"><span>(</span></span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&apos;</span></span><span>SET:</span><span class=\"punctuation definition string end js\"><span>&apos;</span></span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;i</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;j</span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;</span><span class=\"string quoted single js\"><span class=\"punctuation definition string begin js\"><span>&apos;</span></span><span>=</span><span class=\"punctuation definition string end js\"><span>&apos;</span></span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span>&#xA0;v</span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;&#xA0;&#xA0;&#xA0;</span><span class=\"meta brace curly js\"><span>}</span></span><span class=\"meta brace round js\"><span>)</span></span></span></div><div class=\"line\"><span class=\"source js\"><span>&#xA0;</span></span></div><div class=\"line\"><span class=\"source js\"><span class=\"variable other object js\"><span>y</span></span><span class=\"meta method-call js\"><span class=\"meta delimiter method period js\"><span>.</span></span><span class=\"entity name function js\"><span>set</span></span><span class=\"punctuation definition arguments begin js\"><span>(</span></span><span class=\"constant numeric js\"><span>2</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>3</span></span><span class=\"meta delimiter object comma js\"><span>,</span></span><span class=\"constant numeric js\"><span>10</span></span><span class=\"punctuation definition arguments end js\"><span>)</span></span></span><span>&#xA0;</span><span class=\"comment line double-slash js\"><span class=\"punctuation definition comment js\"><span>//</span></span><span>Prints:&#xA0;&#xA0;SET:&#xA0;2&#xA0;3&#xA0;=&#xA0;10</span><span>&#xA0;</span></span></span></div>\n</code></pre>\n<p>If a setter isn&apos;t specified, then writing to the array throws an error.</p>\n<h2 id=\"install\">Install</h2>\n<p>You can install the library using <a href=\"http://npmjs.org\">npm</a>:</p>\n<pre><code class=\"lang-sh\"><div class=\"line\"><span class=\"source shell\"><span>npm&#xA0;install&#xA0;ndarray-proxy</span></span></div>\n</code></pre>\n<p>And like all ndarray modules it should work in a browser that supports typed arrays using <a href=\"https://github.com/substack/node-browserify\">browserify</a>.</p>\n<h2 id=\"api\">API</h2>\n<h3 id=\"-require-ndarray-proxy-shape-get_func-set_func-\"><code>require(&apos;ndarray-proxy&apos;)(shape, get_func[, set_func])</code></h3>\n<p>Creates a wrapper for an ndarray</p>\n<ul>\n<li><code>shape</code> is the shape of the wrapped ndarray</li>\n<li><code>get_func(i0,i1,...)</code> implements access to the ndarray</li>\n<li><code>set_func(i0,i1,...,v)</code> implements writing to the ndarray</li>\n</ul>\n<p><strong>Returns</strong> A proxy view of the functions.</p>\n<h2 id=\"credits\">Credits</h2>\n<p>(c) 2013 Mikola Lysenko. MIT License</p>\n"}