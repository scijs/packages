{"readme":"<h1 class=\"title\"><a target=\"_blank\" href=\"https://github.com/scijs/gsl-sf\">gsl-sf-js</a><div class=\"contrib\"></div></h1>\n<p>special functions of GNU Scientific Library for JS</p>\n<h2 id=\"installation\">Installation</h2>\n<p>Via npm:</p>\n<pre><code>npm install gsl-sf\n</code></pre><p>To use it inside node:</p>\n<pre><code>var sf = require(&quot;gsl-sf&quot;);\n</code></pre><h2 id=\"api\">API</h2>\n<p>For a full documentation of the original C functions, visit <a href=\"https://www.gnu.org/software/gsl/manual/html_node/Special-Functions.html#Special-Functions\">https://www.gnu.org/software/gsl/manual/html_node/Special-Functions.html#Special-Functions</a>. The prefix <code>gsl_sf_</code> was removed from the original function definitions. For example, while in C you would call <code>gsl_sf_gamma (x)</code> to evaluate the Gamma function at value <em>x</em> , the function is exported simply as <code>gamma(x)</code>. </p>\n<p>Example:</p>\n<pre><code>gamma(3); \n</code></pre><p>Output:</p>\n<pre><code>2\n</code></pre><p>Alternatively, we can use the <em>result</em> object or the <em>result_e10</em> class to store the return value of the function:</p>\n<pre><code>var res = new sf.result()\nsf.gamma(3, res)\n</code></pre><p>The <em>result</em> object has two keys: <em>val</em> contains the value and <em>err</em> contains an estimate of the absolute error.</p>\n<p>Code:</p>\n<pre><code>console.log(&quot;The value is &quot; + res.val + &quot;, the error is &quot; + res.err)\n</code></pre><p>Output:</p>\n<pre><code>The value is 2, the error is 4.440892098500626e-16\n</code></pre>"}